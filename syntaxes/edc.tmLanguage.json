{
	"name": "edc",
	"scopeName": "source.edc",
	"patterns": [
		{"include": "#value"}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"begin": "/\\*\\*(?!/)",
					"captures": {
						"0": {
							"name": "punctuation.definition.comment.edc"
						}
					},
					"end": "\\*/",
					"name": "comment.block.documentation.edc"
				},
				{
					"begin": "/\\*",
					"captures": {
						"0": {
							"name": "punctuation.definition.comment.edc"
						}
					},
					"end": "\\*/",
					"name": "comment.block.edc"
				},
				{
					"match": "(//).*$\\n?",
					"captures": {
						"1": {"name": "punctuation.definition.comment.edc"}
					},
					"name": "comment.line.double-slash.js"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.edc",
					"match": "\\b(description|align)\\b|(#define)"
				}
			]
		},
		"string": {
			"name": "string.quoted.double.edc",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.edc",
					"match": "\\\\."
				}
			]
		},
		"number": {
			"name": "constant.numeric.edc",
			"match": "\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)\\b"
		},
		"constant": {
			"patterns": [
				{
					"match": "([a-z,A-Z]+[a-z,A-Z,0-9,_]+)\\s*[\\{?|\\n?]",
					"captures": {
						"1": {"name": "support.type.property-name.edc"}
					},
					"name": ""
				},
				{
					"match": "([a-z,A-Z]+[a-z,A-Z,0-9,_,.]+)\\s*:",
					"captures": {
						"1": {"name": "constant.character.escape.edc"}
					},
					"name": ""
				},
				{
					"match": "\\\\.",
					"name": "invalid.illegal.unrecognized-string-escape.json"
				}
			]
		},
		"value": {
			"patterns": [
				{"include": "#keywords"},
				{"include": "#string"},
				{"include": "#comments"},
				{"include": "#number"},
				{"include": "#constant"}
			]
		}
	}
}
